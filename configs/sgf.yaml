name: sgf2_l1aug
version: f4
fold: &fold 4

model:
  type: MMSegModel
  backbone:
    type: mmseg.MixVisionTransformer
    in_channels: 6
    embed_dims: 64
    num_stages: 4
    num_layers: [3, 4, 6, 3] # b2
    # num_layers: [3, 8, 27, 3] # b4
    num_heads: [1, 2, 5, 8]
    patch_sizes: [7, 3, 3, 3]
    sr_ratios: [8, 4, 2, 1]
    out_indices: [0, 1, 2, 3]
    with_cp: False
    mlp_ratio: 4
    qkv_bias: True
    drop_rate: 0.0
    attn_drop_rate: 0.0
    drop_path_rate: 0.1
    pretrained: ./weights/mit_b2_mmseg.pth
  decode_head:
    type: SegformerHead
    in_channels: [64, 128, 320, 512]
    in_index: [0, 1, 2, 3]
    channels: 256
    dropout_ratio: 0.1
    norm_cfg: {type: 'BN', requires_grad: True}
    align_corners: False
    num_classes: 1

loss: [
  {
    type: BCEWithIgnoreLoss, 
    loss_name: bce_loss, 
    ignore_index: 255, 
    loss_weight: 1.0,
  }, 
  {
    type: DiceLoss, 
    loss_name: dice_loss, 
    loss_weight: 1.0, 
  }
]

metric: 
  type: ChangeAP
  thres_list: [0.1, 0.2, 0.3]

data:
  type: ConcatData
  fold: *fold
  num_folds: 5
  batch_size: 32
  stratified_by: null
  group_by: null
  dataset:
    resize: &resize 512
    shuffle_ratio: 0.0
    trans: { 
      train: {type: Compose, transforms: [
        {type: Resize, height: *resize, width: *resize},
        {type: HorizontalFlip, p: 0.5},
        {type: VerticalFlip, p: 0.5},
        {type: RandomRotate90, p: 0.5},
        # {type: ShiftScaleRotate, rotate_limit: 45, border_mode: 0, value: 0, mask_value: 0, p: 0.5},
        {type: OneOf, transforms: [
          {type: ElasticTransform, p: 0.5},
          {type: GridDistortion, p: 0.5},
          # {type: OpticalDistortion, p: 0.5},
        ], p: 1.0},
        {type: ColorJitter, p: 0.5},
        {type: GaussNoise, p: 0.5},
        {type: Normalize},
        {type: ToTensorV2},
      ], additional_targets: {imageB: image}},
      val: {type: Compose, transforms: [
        {type: Resize, height: *resize, width: *resize},
        {type: Normalize},
        {type: ToTensorV2},
      ], additional_targets: {imageB: image}}
    }

train:
  # optimizer
  optimizer: adam
  learning_rate: 1e-3
  weight_decay: 2e-5

  # scheduler
  num_epochs: 50
  scheduler: one_cycle

  # trainer
  monitor: val_ap
  log_step: 50
  val_interval: 1
  swa: True
  grad_clip: 2.0
  strategy: dp
  save_topk: 1
