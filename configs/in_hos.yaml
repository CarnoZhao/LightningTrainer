name: in_hos
version: hos3_f0
fold: &fold 0
hos_id: &hos_id 3
seed: 0

model:
  type: TIMMModel
  model_name: tf_efficientnet_b0_ns
  num_classes: 2
  drop_rate: 0.5

loss: 
  type: nn.CrossEntropyLoss

metric: 
  type: MILMetric
  bag_by: uid
  group_by: hos_id
  metrics: [auc]

data:
  type: NasoData
  fold: *fold
  num_folds: 4
  batch_size: 64
  stratified_by: null
  group_by: null
  fold_by: fold
  dataset:
    data_dir: crop_images
    use_hos_id: *hos_id
    resize: &resize 384
    albu_norm: &albu_norm {type: Normalize, mean: [0.53017267, 0.31335013, 0.31556818], std: [0.33659712, 0.23721003, 0.24286168]}
    trans: {
      train: {type: Compose, transforms: [
        {type: Resize, height: *resize, width: *resize},
        {type: HorizontalFlip, p: 0.5},
        {type: VerticalFlip, p: 0.5},
        {type: RandomRotate90, p: 0.5},
        # {type: ShiftScaleRotate, rotate_limit: 45, border_mode: 0, value: 0, mask_value: 0, p: 0.5},
        {type: OneOf, transforms: [
          {type: ElasticTransform, p: 0.5},
          {type: GridDistortion, p: 0.5},
        #   {type: OpticalDistortion, p: 0.5},
        ], p: 1.0},
        {type: ColorJitter, p: 0.5},
        # {type: GaussNoise, p: 0.5},
        *albu_norm,
        {type: ToTensorV2},
      ]},
      val: {type: Compose, transforms: [
        {type: Resize, height: *resize, width: *resize},
        # {type: ToGray, p: 1.0},
        *albu_norm,
        {type: ToTensorV2},
      ]}
    }

train:
  # optimizer
  optimizer: adam
  learning_rate: 1e-4
  weight_decay: 1e-2

  # scheduler
  num_epochs: 20
  scheduler: one_cycle

  # trainer
  monitor: val_auc
  log_step: 10
  val_interval: 1
  swa: False
  grad_clip: 2.0
  strategy: dp
  save_topk: 1
